#!/bin/bash

# Launch a server. Also builds rocks and docs.

build() {

  package="moonwalk"
  version="1.0-1"
  source_url="https://github.com/abadc0de/moonwalk"
  name="$package-$version"
  rm -rf rocks/*
  luarocks build --local rockspec/$name.rockspec
  luarocks pack $package
  mv *.rock rocks
  cp rockspec/$name.rockspec rocks/
  luarocks-admin make-manifest rocks/
  mkdir rocks/$package
  echo "<!doctype html>
<html><head><title>Redirecting...</title>
<meta http-equiv='refresh' content='2; url=$source_url'>
</head><body>
<code>Redirecting to <a href='$source_url'>$source_url</a></code>
</body></html>" > rocks/$package/index.html

   rm -rf docs/*; ldoc .

}

if [ "$1" == "build" ]; then
  build
else

  usage="Usage: $0 [host] [path] [port]
  
    [host]:  One of 'socket', 'luanode', 'mongoose', or 'civetweb'.
             Default: socket
            
    [path]:  The path to your API root, like 'example'.
             Default: example
   
    [port]:  The port number to run on.
             Default: 8910
"

  host="$1" # host environment
  path="$2" # path to project
  port="$3" # port to serve on

  if [ "$host" == "" ]; then
    host="socket"
  fi

  if [ "$path" == "" ]; then
    path="example"
  fi

  if [ "$port" == "" ]; then
    port="8910"
  fi
  
  if [ "$host" == "socket" ]; then
    build
    lua moonwalk/server/socket.lua /$path/ $port
  elif [ "$host" == "luanode" ]; then
    build
    bin/luanode moonwalk/server/luanode.lua /$path/ $port
  elif [ "$host" == "mongoose" ] || [ "$host" == "civetweb" ]; then
    build
    bin/$host -document_root .. -listening_ports $port \
    -url_rewrite_patterns /$path/**=$path/index.lp
  else
    echo "$usage"
  fi

fi
